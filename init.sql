CREATE DATABASE WEB;
USE WEB;
CREATE TABLE ROLES
(
	ROLE_ID NVARCHAR(8) PRIMARY KEY,
    NAME NVARCHAR(30)
);
CREATE TABLE USERS 
(
	USER_ID NVARCHAR(16) PRIMARY KEY,
    USERNAME NVARCHAR(30),
    EMAIL NVARCHAR(30),
    GENDER BIT,
    SCORE INT,
    AVATAR NVARCHAR(256),
    PASSWORD NVARCHAR(30),
    BIRTH DATETIME, 
    PHONE NVARCHAR(11),
    ADDRESS NVARCHAR(256),
	SCHOOL NVARCHAR(256),
    CREATEDAT DATETIME,
    UPDATEDAT DATETIME,
    ROLEID NVARCHAR(8)
);
CREATE TABLE PROBLEMS
(
	PROBLEM_ID NVARCHAR(16) PRIMARY KEY,
    NAME NVARCHAR(60),
    DESCRIPTION NVARCHAR(4000),	
    LEVEL INT, 
    SCORE INT,
    TIMELIMIT FLOAT,
    CREATEDAT DATETIME,
    UPDATEDAT DATETIME,
    AUTHORID NVARCHAR(16)
);
CREATE TABLE TESTCASES
(
	TESTCASE_ID NVARCHAR(16) PRIMARY KEY,
    INPUT NVARCHAR(100),
    OUTPUT NVARCHAR(4000),
	CREATEDAT DATETIME,
    UPDATEDAT DATETIME,
    PROBLEMID NVARCHAR(16)
);
CREATE TABLE SUBMITDETAILS
(
	SUBMITID NVARCHAR(16),
    TESTCASESID NVARCHAR(16),
    TIME FLOAT,
    STATE INT,
    PRIMARY KEY (SUBMITID, TESTCASESID)
);
CREATE TABLE SUBMISSIONS
(
	SUBMIT_ID NVARCHAR(16) PRIMARY KEY,
    CODE NVARCHAR(4000),
    LANGUAGE NVARCHAR(30),
    STATE INT,
	CREATEDAT DATETIME,
    USERID NVARCHAR(16)
);
ALTER TABLE USERS
	ADD CONSTRAINT FK_UserRole
    FOREIGN KEY (ROLEID)
    REFERENCES ROLES(ROLE_ID)
    ON DELETE SET NULL;

ALTER TABLE PROBLEMS
	ADD CONSTRAINT Fk_ProblemUser
    FOREIGN KEY (AUTHORID)
    REFERENCES USERS(USER_ID)
    ON DELETE SET NULL;

ALTER TABLE TESTCASES
	ADD CONSTRAINT Fk_TestcaseProblem
    FOREIGN KEY (PROBLEMID)
    REFERENCES PROBLEMS(PROBLEM_ID)
    ON DELETE CASCADE;
    
ALTER TABLE SUBMISSIONS
	ADD CONSTRAINT Fk_SubmissionUser
    FOREIGN KEY (USERID)
    REFERENCES USERS(USER_ID)
    ON DELETE CASCADE;
ALTER TABLE SUBMITDETAILS
	ADD CONSTRAINT Fk_SubmitDetailTestcase
    FOREIGN KEY (TESTCASESID)
    REFERENCES TESTCASES(TESTCASE_ID)
	ON DELETE CASCADE;
ALTER TABLE SUBMITDETAILS
    ADD CONSTRAINT Fk_SubmitDetailSubmission
    FOREIGN KEY (SubmitID)
    REFERENCES SUBMISSIONS(SUBMIT_ID)
    ON DELETE CASCADE;

INSERT INTO ROLES(ROLE_ID, NAME)
VALUES('R_01', 'Admin');
INSERT INTO ROLES(ROLE_ID, NAME)
VALUES('R_02', 'User');

INSERT INTO USERS(USER_ID, USERNAME, EMAIL, GENDER, AVATAR, SCORE, BIRTH, PHONE, PASSWORD, SCHOOL, ADDRESS, CREATEDAT, UPDATEDAT, ROLEID)
VALUES('U_01', 'rubeha', 'ronle9519@gmail.com', 1, 'http://localhost/myphp/mvc/public/images/default_avatar.png', 100, '2002-09-16', '0905857760', 'ronle75', 'Đại học bách khoa - Đại học Đà Nẵng', 'Phú Thuận - Phú Vang - Thừa Thiên Huế','2022-09-18', NULL, 'R_02');
INSERT INTO USERS(USER_ID, USERNAME, EMAIL, GENDER, AVATAR, SCORE, BIRTH, PHONE, PASSWORD, SCHOOL, ADDRESS, CREATEDAT, UPDATEDAT, ROLEID)
VALUES('U_02', 'leron1605', 'leron1605@gmail.com', 1,  'http://localhost/myphp/mvc/public/images/default_avatar.png', 100, '2002-09-16', '0905857760', 'ronle75', 'Đại học bách khoa - Đại học Đà Nẵng', 'Phú Thuận - Phú Vang - Thừa Thiên Huế', '2022-09-18', NULL, 'R_02');
INSERT INTO USERS(USER_ID, USERNAME, EMAIL, GENDER, AVATAR, SCORE, BIRTH, PHONE, PASSWORD, SCHOOL, ADDRESS, CREATEDAT, UPDATEDAT, ROLEID)
VALUES('U_03', 'admin', 'admin', 1, 'http://localhost/myphp/mvc/public/images/default_avatar.png', 100, '2002-09-16', '0905857760', 'admin', 'Đại học bách khoa - Đại học Đà Nẵng', 'Phú Thuận - Phú Vang - Thừa Thiên Huế', '2022-09-18', NULL, 'R_01');

INSERT INTO PROBLEMS(PROBLEM_ID, NAME, DESCRIPTION, SCORE, TIMELIMIT, LEVEL, CREATEDAT, UPDATEDAT, AUTHORID)
VALUES('P_01', 'Toán tử cộng', 'Viết chương trình hiển thị ra màn hình kết quả phép tính: "a + b"', 100, 0.05, 2, '2022-09-18', NULL, 'U_03');
INSERT INTO PROBLEMS(PROBLEM_ID, NAME, DESCRIPTION, SCORE, TIMELIMIT, LEVEL, CREATEDAT, UPDATEDAT, AUTHORID)
VALUES('P_02', 'Hello World!!', 'Viết chương trình hiển thị ra màn hình: "Hello World!!"', 50, 0.05, 1, '2022-09-18', NULL, 'U_03');

INSERT INTO TESTCASES(TESTCASE_ID, INPUT, OUTPUT, CREATEDAT, UPDATEDAT, PROBLEMID)
VALUES('TC_01', '1 2', '3', '2022-09-18', NULL, 'P_01');
INSERT INTO TESTCASES(TESTCASE_ID, INPUT, OUTPUT, CREATEDAT, UPDATEDAT, PROBLEMID)
VALUES('TC_02', '1 -2', '-1', '2022-09-18', NULL, 'P_01');
INSERT INTO TESTCASES(TESTCASE_ID, INPUT, OUTPUT, CREATEDAT, UPDATEDAT, PROBLEMID)
VALUES('TC_03', '', 'Hello World!!', '2022-09-18', NULL, 'P_02');

INSERT INTO SUBMISSIONS(SUBMIT_ID, CODE, LANGUAGE, STATE, CREATEDAT, USERID)
VALUES('SUB_01', '#include<iostream> using namespace std;int main(){int a, b;cin >> a >> b;cout << a + b;return 0;}', 'cpp', 0, '2022-09-18', 'U_01');
INSERT INTO SUBMISSIONS(SUBMIT_ID, CODE, LANGUAGE, STATE, CREATEDAT, USERID)
VALUES('SUB_02', '#include<iostream> using namespace std;int main(){int a, b;cin >> a >> b;cout << a + b;return 0;}', 'cpp', 1, '2022-09-18', 'U_02');
INSERT INTO SUBMISSIONS(SUBMIT_ID, CODE, LANGUAGE, STATE, CREATEDAT, USERID)
VALUES('SUB_03', '#include<iostream> using namespace std;int main(){int a, b;cin >> a >> b;cout << a + b;return 0;}', 'cpp', 0, '2022-09-18', 'U_02');
INSERT INTO SUBMISSIONS(SUBMIT_ID, CODE, LANGUAGE, STATE, CREATEDAT, USERID)
VALUES('SUB_04', '#include<iostream> using namespace std;int main(){cout<<"Hello World!!";return 0;}', 'cpp', 0, '2022-09-18', 'U_02');
INSERT INTO SUBMISSIONS(SUBMIT_ID, CODE, LANGUAGE, STATE, CREATEDAT, USERID)
VALUES('SUB_05', '#include<iostream> using namespace std;int main(){cout<<"Hello World!!";return 0;}', 'cpp', 1, '2022-09-18', 'U_01');

INSERT INTO SUBMITDETAILS(SUBMITID, TESTCASESID, TIME, STATE)
VALUES('SUB_01', 'TC_01', 0.05, 0);
INSERT INTO SUBMITDETAILS(SUBMITID, TESTCASESID, TIME, STATE)
VALUES('SUB_01', 'TC_02', 0.05, 0);
INSERT INTO SUBMITDETAILS(SUBMITID, TESTCASESID, TIME, STATE)
VALUES('SUB_02', 'TC_01', 0.05, 0);
INSERT INTO SUBMITDETAILS(SUBMITID, TESTCASESID, TIME, STATE)
VALUES('SUB_02', 'TC_02', 0.2, 1);
INSERT INTO SUBMITDETAILS(SUBMITID, TESTCASESID, TIME, STATE)
VALUES('SUB_03', 'TC_01', 0.05, 0);
INSERT INTO SUBMITDETAILS(SUBMITID, TESTCASESID, TIME, STATE)
VALUES('SUB_03', 'TC_02', 0.05, 0);
INSERT INTO SUBMITDETAILS(SUBMITID, TESTCASESID, TIME, STATE)
VALUES('SUB_04', 'TC_03', 0.05, 0);
INSERT INTO SUBMITDETAILS(SUBMITID, TESTCASESID, TIME, STATE)
VALUES('SUB_05', 'TC_03', 0.05, 1);

CREATE VIEW V_ProblemSubmission
AS
	SELECT DISTINCT SUBMISSIONS.SUBMIT_ID, PROBLEMS.*, SUBMISSIONS.STATE, SUBMISSIONS.USERID FROM SUBMISSIONS
	INNER JOIN SUBMITDETAILS
	ON SUBMISSIONS.SUBMIT_ID = SUBMITDETAILS.SUBMITID
	INNER JOIN TESTCASES
	ON TESTCASES.TESTCASE_ID = SUBMITDETAILS.TESTCASESID
	INNER JOIN PROBLEMS
	ON PROBLEMS.PROBLEM_ID = TESTCASES.PROBLEMID;

delimiter $$
CREATE PROCEDURE SP_GetSubmitCountOfProblem(IN STATE INT)
BEGIN
	SELECT PROBLEMS.PROBLEM_ID, COUNT(SUBMISSIONS.SUBMIT_ID) AS 'SUBMIT_COUNT' FROM SUBMISSIONS
	LEFT JOIN SUBMITDETAILS
	ON SUBMISSIONS.SUBMIT_ID = SUBMITDETAILS.SUBMITID
	LEFT JOIN TESTCASES
	ON TESTCASES.TESTCASE_ID = SUBMITDETAILS.TESTCASESID
	LEFT JOIN PROBLEMS
	ON PROBLEMS.PROBLEM_ID = TESTCASES.PROBLEMID
    WHERE STATE = -1 OR SUBMISSIONS.STATE = STATE
    GROUP BY PROBLEMS.PROBLEM_ID;
END
$$
delimiter ;

-- Bài problem chưa đạt của users
delimiter $$
CREATE PROCEDURE SP_GetUnDoneProblems(IN UserID NVARCHAR(16))
BEGIN
    SELECT DISTINCT PROBLEMS.PROBLEM_ID FROM USERS
	INNER JOIN SUBMISSIONS
	ON USERS.USER_ID = SUBMISSIONS.USERID
	INNER JOIN SUBMITDETAILS
	ON SUBMISSIONS.SUBMIT_ID = SUBMITDETAILS.SUBMITID
	INNER JOIN TESTCASES 
	ON TESTCASES.TESTCASE_ID = SUBMITDETAILS.TestCasesID
	INNER JOIN PROBLEMS
	ON PROBLEMS.PROBLEM_ID = TESTCASES.PROBLEMID
	WHERE SUBMISSIONS.STATE != '1' AND USERS.USER_ID = UserID
		AND PROBLEMS.PROBLEM_ID NOT IN 
    (
		SELECT DISTINCT PROBLEMS.PROBLEM_ID FROM USERS
		INNER JOIN SUBMISSIONS
		ON USERS.USER_ID = SUBMISSIONS.USERID
		INNER JOIN SUBMITDETAILS
		ON SUBMISSIONS.SUBMIT_ID = SUBMITDETAILS.SUBMITID
		INNER JOIN TESTCASES 
		ON TESTCASES.TESTCASE_ID = SUBMITDETAILS.TestCasesID
		INNER JOIN PROBLEMS
		ON PROBLEMS.PROBLEM_ID = TESTCASES.PROBLEMID
		WHERE SUBMISSIONS.STATE = '1' AND USERS.USER_ID = UserID
    );
END
$$
delimiter ;

-- Tên các Problem, SubmitID đầu tiên đã giải của user
-- delimiter $$
-- CREATE PROCEDURE SP_GetFirstSubmitSuccess(IN UserID NVARCHAR(8))
-- BEGIN
-- 	SELECT PROBLEMS.ID FROM USERS
-- 	INNER JOIN SUBMISSIONS
-- 	ON USERS.ID = USERID
-- 	INNER JOIN SUBMITDETAILS
-- 	ON ID = SUBMITDETAILS.SUBMITID
-- 	INNER JOIN TESTCASES
-- 	ON SUBMITDETAILS.TESTCASESID = TESTCASES.ID
-- 	INNER JOIN PROBLEMS
-- 	ON PROBLEMS.ID = TESTCASES.PROBLEMID
-- 	WHERE SUBMISSIONS.STATE = 0 AND USERS.ID = '312bd7d4-9781-42c7-ac64-fb6969e9bd8c'
-- 	GROUP BY PROBLEMS.ID;
-- END
-- $$
-- delimiter ;
-- SELECT * FROM PROBLEMS;
-- SET SQL_SAFE_UPDATES = 0;
-- SELECT * FROM USERS;
-- DELETE FROM USERS WHERE USERNAME = "rubeha";